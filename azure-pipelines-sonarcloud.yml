# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
 branches:
  include:
    - master
 paths:
   include:
     - Demo/ProductAPI/*

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: SnykSecurityScan@1
  inputs:
    serviceConnectionEndpoint: 'AZDevOpsSnykServiceConnection'
    testType: 'app'
    targetFile: 'ProductAPI/project.assets.json'
    monitorWhen: 'always'
    failOnIssues: true
    organization: 'amoljoshi10'
    
- task: SonarCloudPrepare@1
  displayName: "Prepare Sonar analysis configuration"
  inputs:
    SonarCloud: 'SonarCloudConnection'
    organization: 'amolajoshi-azdo-org'
    scannerMode: 'MSBuild'
    projectKey: 'amolajoshi_Demo'
    projectName: 'Demo'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site""'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '**/*.csproj'
    arguments: '--collect "Code Coverage"'


- task: SonarCloudAnalyze@1

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'


- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
    

